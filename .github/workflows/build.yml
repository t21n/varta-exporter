name: Build

on:
  pull_request:
  merge_group:
  push:
    branches:
      - develop
    tags:
      - '*'

jobs:
  Build:
    name: Build and Test on ${{ matrix.python }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['macos-latest', 'ubuntu-latest']
        python: ['pypy3.9', 'pypy3.10', '3.9', '3.10', '3.11', '3.12']

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        id: install-deps
        run: |
          (cd app && pip3 install -r requirements.txt)
          (cd test && pip3 install -r requirements.txt)

      - name: Test
        id: run-tests
        run: |
          cd test
          pytest

  Container:
    name: Build Container Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Write version vars
        id: version-vars
        run: |
          BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"`
          BRANCH=${GITHUB_REF_NAME#v}
          APP_VERSION=$(cat config.json | grep version| head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g')
          echo Version: $APP_VERSION
          echo "VERSION=$APP_VERSION" >> $GITHUB_ENV
          echo "APP_VERSION=$APP_VERSION" >> $GITHUB_ENV
          echo "BUILD_DATE=$BUILD_DATE" >> $GITHUB_ENV

      - name: Build image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: hypery2k/varta-exporter
          tags: 'latest next ${{env.APP_VERSION}} ${{env.APP_VERSION}}_rc'
          containerfiles: |
            ./Dockerfile
          build-args: |
            BUILD_DATE=${{env.BUILD_DATE}}
            APP_VERSION=${{env.APP_VERSION}}
